Kartikeya Sharma
February 12, 2019 @ 1 PM
lab 05 - notes.txt
notes: This text file contains
       responses to questions
       in Lab 05.

Exercise 1: Creating a memory map

Segment     |    Start    |     End      |     Size          #Comments
------------+-------------+--------------+-------------
Stack       | 0x7fff ff86 | 0x7fff ffff  | 0x0000 007a       #main() 0x16 bytes, printf() 0x64 bytes,
Heap        | 0x0040 0298 |              |
Data        | 0x0040 0100 | 0x0040 0297  | 0x0000 0198
Text        | 0x0040 0000 | 0x0040 00ff  | 0x0000 0100

* note all addresses are inclusive.



Exercise 2: Syscalls

1. read an integer from the keyboard into $t0

li $v0, 5
syscall
add $t0, $v0, $zero

2. print an integer in $t0 to the terminal

li $v0, 1
add $a0, $t0, $zero
syscall

3. read from the keyboard a string and store it at the address
   corresponding to the label my_str

li $v0, 8
la $a0, my_str
addi $a1, $zero, 1024
syscall

(This response assumes that something similar to the following
 line has already been defined in the .data section:
 my_str: .asciiz "").

4. print to the terminal a string declared at the address
   corresponding to the label prompt

li $v0, 4
la $a0, prompt
syscall

(This response assumes that something similar to the following
 line has already been defined in the .data section:
 prompt: .asciiz <string>, where <string> is replaced by
 the string to be printed out to the terminal).

5. exit a program returning with the value -1

li $v0, 17
li $a0, -1
syscall
